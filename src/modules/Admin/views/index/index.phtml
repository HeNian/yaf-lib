<nav id="nav" class="navbar navbar-inverse navbar-fixed-top" role="navigation">
    </nav>
<div class="container-fluid" id="container">
</div>

<script type="text/jsx">

var TabbedArea = ReactBootstrap.TabbedArea;
var TabPane = ReactBootstrap.TabPane;
var Glyphicon = ReactBootstrap.Glyphicon;
var Table = ReactBootstrap.Table;
var Pagination = ReactBootstrap.Pagination;

const NavInstance = React.createClass({

    render:function(){
        return (

    <div className="container-fluid">
        <div className="navbar-header">
            <button type="button" className="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span className="sr-only">Toggle navigation</span>
                <span className="icon-bar"></span>
                <span className="icon-bar"></span>
                <span className="icon-bar"></span>
            </button>
            <a className="navbar-brand" href="#">后台管理</a>
        </div>
        <div id="navbar" className="navbar-collapse collapse">
            <ul className="nav navbar-nav navbar-right">
                <li><a>admin</a></li>
                <li><a href="/admin/logout">退出</a></li>
            </ul>
        </div>
    </div>

        );
    }
});

var LeftContainer = React.createClass({
  render: function() {
    return (
      <div className="col-sm-3 col-md-2 sidebar">
          <ul className="nav nav-sidebar">
            <li className="active"><a href="#"><Glyphicon glyph='user' /> Overview <span className="sr-only">(current)</span></a></li>
            <li><a href="#">Reports</a></li>
            <li><a href="#">Analytics</a></li>
            <li><a href="#">Export</a></li>
          </ul>
          <ul className="nav nav-sidebar">
            <li className="active"><a><Glyphicon glyph='search' /> Nav item</a></li>
            <li><a href="">Nav item again</a></li>
            <li><a href="">One more nav</a></li>
            <li><a href="">Another nav item</a></li>
            <li><a href="">More navigation</a></li>
          </ul>
          <ul className="nav nav-sidebar">
            <li className="active"><a href=""><Glyphicon glyph='picture' /> Nav item again</a></li>
            <li><a href="">One more nav</a></li>
            <li><a href="">Another nav item</a></li>
          </ul>
        </div>
    );
  }
});

const TesttableInstance = React.createClass({

    getInitialState: function() {
        return {
            activePage : 1
        };
    },

    getData: function(page){
        $.ajax({
            url : '/admin/search/data',
            data : {p:page},
            type : 'POST',
            dataType: 'json',
            success : function(result) {

                  if (this.isMounted()) {
                    this.setState({
                      data : result
                    });
                  }

                }.bind(this)
        });
    },

    pageSelect(event, selectedEvent) {
        this.setState({
          activePage: selectedEvent.eventKey
        });

        this.getData(selectedEvent.eventKey);
    },

    componentWillMount: function() {
        this.getData(1);
    },


    render: function(){
        if (this.state.data != undefined){
            var dataNode = this.state.data.map(function(node){
                return (
                    <tr>
                    <td>{node.did}</td>
                    <td>{node.data}</td>
                    <td>{node.termlist}</td>
                </tr>
                );
            });
        } else {
            var dataNode = (<tr></tr>);
        }

        return (
            <div>
            <Pagination
                prev
                next
                first
                last
                ellipsis
                items={20}
                maxButtons={5}
                activePage={this.state.activePage}
                onSelect={this.pageSelect}
            />
            <Table striped bordered condensed hover>
                <thead>
                  <tr>
                    <th>did</th>
                    <th>data</th>
                    <th>termlist</th>
                  </tr>
                </thead>
                <tbody>
                  {dataNode}
                </tbody>
              </Table>
              </div>
        );
    }
});

const PaginationAdvanced = React.createClass({
  getInitialState() {
    return {
      activePage: 1
    };
  },

  handleSelect(event, selectedEvent) {
    this.setState({
      activePage: selectedEvent.eventKey
    });
    alert(selectedEvent.eventKey);
    //React.render(<TesttableInstance />, document.getElementById('table'));
  },

  render() {
    return (
      <Pagination
        prev
        next
        first
        last
        ellipsis
        items={20}
        maxButtons={5}
        activePage={this.state.activePage}
        onSelect={this.handleSelect} />
    );
  }
});

const ControlledTabArea = React.createClass({
  getInitialState() {
    return {
      key: 1
    };
  },

  handleSelect(key) {
    alert('selected ' + key);
    this.setState({key});
  },

  render() {
    return (
      <TabbedArea activeKey={this.state.key} onSelect={this.handleSelect}>
        <TabPane eventKey={1} tab='Tab 123'>
            <h1>table</h1>
            <div id="table">
                <TesttableInstance />
            </div>

        </TabPane>
        <TabPane eventKey={2} tab='Tab 2'>TabPane 2 content</TabPane>
        <TabPane eventKey={3} tab='Tab 3' disabled>TabPane 3 content</TabPane>
      </TabbedArea>
    );
  }
});

var RightContainer = React.createClass({
  render: function() {
    return (
      <div className="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
        <ControlledTabArea />
        </div>
    );
  }
});

const ContainerInstance = React.createClass({
    render: function(){
        return (
        <div class="row">
            <LeftContainer />
            <RightContainer />
        </div>
        );
    }
});

React.render(<NavInstance />, document.getElementById('nav'));

React.render(<ContainerInstance />, document.getElementById('container'));
</script>